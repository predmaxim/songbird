{"version":3,"file":"assets/js/main.a8bc97e5.js","mappings":"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","sources":["webpack://rss-gem-puzzle/./src/js/main.js","webpack://rss-gem-puzzle/./src/js/game.js"],"sourcesContent":["import Game from './game';\n\nconst game = new Game({  \n  itemSize: 80,\n})","class Game {\n\n  constructor(setting) {\n    this.setting = setting;\n    this.info = [\n      {\n        id: 3,\n        time: { minutes: 0, seconds: 0 },\n        moves: 0,\n        blocksMap: [],\n        winnerBlocksResult: [...Array(9).keys()],\n        best: {\n          time: { minutes: 0, seconds: 0 },\n          moves: 0,\n        },\n        last: false\n      },\n      {\n        id: 4,\n        time: { minutes: 0, seconds: 0 },\n        moves: 0,\n        blocksMap: [],\n        winnerBlocksResult: [...Array(16).keys()],\n        best: {\n          time: { minutes: 0, seconds: 0 },\n          moves: 0,\n        },\n        last: false\n      },\n      {\n        id: 5,\n        time: { minutes: 0, seconds: 0 },\n        moves: 0,\n        blocksMap: [],\n        winnerBlocksResult: [...Array(25).keys()],\n        best: {\n          time: { minutes: 0, seconds: 0 },\n          moves: 0,\n        },\n        last: false\n      },\n      {\n        id: 6,\n        time: { minutes: 0, seconds: 0 },\n        moves: 0,\n        blocksMap: [],\n        winnerBlocksResult: [...Array(36).keys()],\n        best: {\n          time: { minutes: 0, seconds: 0 },\n          moves: 0,\n        },\n        last: false\n      },\n      {\n        id: 7,\n        time: { minutes: 0, seconds: 0 },\n        moves: 0,\n        blocksMap: [],\n        winnerBlocksResult: [...Array(49).keys()],\n        best: {\n          time: { minutes: 0, seconds: 0 },\n          moves: 0,\n        },\n        last: false\n      },\n      {\n        id: 8,\n        time: { minutes: 0, seconds: 0 },\n        moves: 0,\n        blocksMap: [],\n        winnerBlocksResult: [...Array(64).keys()],\n        best: {\n          time: { minutes: 0, seconds: 0 },\n          moves: 0,\n        },\n        last: false\n      },\n    ];\n    this.defaultFSid = 4;\n    this.itemSize = 80;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.moves = 0;\n    this.isGame = false;\n    this.isTimer = 0;\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.blocks = [];\n    this.zeroBlock = [];\n    this.currentBlock = {};\n    this.createPage();\n    this.init();\n  }\n\n  init() {\n    this.restore(this.defaultFSid);\n    console.log(this.frameSize)\n    // this.setCurrentBlocksMap(this.frameSize.id)\n    this.setCanvas();\n    this.playAudio();\n\n    window.addEventListener('resize', () => {\n      if (window.innerWidth < 600) {\n        this.itemSize = Math.floor(window.innerWidth / (this.frameSize.id + 2))\n        this.setCanvas();\n      } else if (window.innerWidth >= 600) this.itemSize = 80\n    })\n\n    document.addEventListener('click', (e) => {\n      if (e.target == this.canvas && this.isGame) this.moveBlock(e);\n      if (e.target == this.startBtn) this.start();\n      if (e.target == this.stopBtn) this.stop();\n      if (e.target == this.saveBtn) this.save();\n      if (e.target == this.resultBtn) this.result();\n      if (e.target.classList.contains('frame-size')) {\n\n        this.stop();\n        this.clearMoves();\n        this.clearTimer();\n\n\n        this.restore(+e.target.dataset.action);\n        // this.setCurrentBlocksMap(+e.target.dataset.action)\n\n        this.setCanvas();\n        this.frameSizeInfoElem.textContent = `${this.frameSize.id}x${this.frameSize.id}`\n      }\n    })\n  }\n\n  createPage() {\n    if (!document.querySelector('container')) {\n\n      const container = document.createElement('div')\n      container.className = 'container'\n      document.body.prepend(container)\n\n      let h1 = document.createElement('h1')\n      h1.textContent = 'RSS Gem Puzzle'\n      container.prepend(h1)\n\n      let buttons = document.createElement('div')\n      buttons.className = 'buttons'\n      container.append(buttons)\n\n      for (let button of ['start', 'stop', 'save', 'result']) {\n        let b = document.createElement('button')\n        b.className = `${button}`\n        b.textContent = `${button}`\n        buttons.append(b)\n      }\n\n      let currentInfo = document.createElement('div')\n      currentInfo.className = 'current-info'\n      container.append(currentInfo)\n\n      currentInfo.insertAdjacentHTML('afterbegin', '<div class=\"timer\">Time: <span>00:00</span></div>')\n      currentInfo.insertAdjacentHTML('afterbegin', '<div class=\"moves\">Moves: <span>0</span></div>')\n\n      let gameContainer = document.createElement('div')\n      gameContainer.className = 'game-container'\n      container.append(gameContainer)\n\n      let frameSizeInfo = document.createElement('div')\n      frameSizeInfo.className = 'frame-size-info'\n      container.append(frameSizeInfo)\n\n      frameSizeInfo.insertAdjacentHTML('afterbegin', 'Frame size: <span></span></div>')\n\n      let otherFrameSizes = document.createElement('div')\n      otherFrameSizes.className = 'other-frame-sizes'\n      container.append(otherFrameSizes)\n\n      otherFrameSizes.innerHTML += 'Other sizes:'\n\n      for (let frameSize of this.info) {\n        let a = document.createElement('a')\n        a.href = '#'\n        a.className = `frame-size`\n        a.setAttribute('data-action', `${frameSize.id}`)\n        a.textContent = `${frameSize.id}x${frameSize.id}`\n        otherFrameSizes.append(a)\n      }\n\n      this.movesElem = document.querySelector('.moves span')\n      this.wrap = gameContainer\n      this.startBtn = document.querySelector('.start')\n      this.stopBtn = document.querySelector('.stop');\n      this.saveBtn = document.querySelector('.save');\n      this.resultBtn = document.querySelector('.result');\n      this.timerElem = document.querySelector('.timer span');\n      this.frameSizeInfoElem = document.querySelector('.frame-size-info span');\n    }\n  }\n\n  getRandomBlocks(fs) {\n    const s = this.info.filter(e => e.id == fs)[0]\n\n    const arr = s.winnerBlocksResult.slice()\n\n    const res = []\n\n    for (let i = arr.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n\n    while (res.length < s.id) {\n      res.push(arr.splice(0, s.id));\n    }\n\n    return res;\n  }\n\n  setCurrentBlocksMap(fs) {\n    if (this.info.filter(e => e.id == fs)[0].blocksMap.length === 0) {\n\n      this.frameSize.blocksMap = this.getRandomBlocks(fs).slice()\n\n    } else this.frameSize.blocksMap = this.info.filter(e => e.id == fs)[0].blocksMap.slice()\n  }\n\n  setCanvas() {\n    this.itemSize = window.innerWidth < 600\n      ? Math.floor(window.innerWidth / (this.frameSize.id + 2))\n      : this.setting.itemSize;\n\n    this.canvas.classList.add('game')\n    this.canvas.width = this.frameSize.id * this.itemSize\n    this.canvas.height = this.canvas.width\n\n    this.wrap.insertAdjacentElement('afterbegin', this.canvas);\n\n    let tempBlocks = [];\n    for (let i = 0; i < this.frameSize.id; i++) {\n      for (let j = 0; j < this.frameSize.id; j++) {\n        this.ctx.save();\n        this.ctx.translate(j * this.itemSize + 2, i * this.itemSize + 2);\n        this.ctx.fillStyle = '#e2e2e2'\n        this.ctx.fillRect(0, 0, this.itemSize - 4, this.itemSize - 4);\n\n        if (this.frameSize.blocksMap[i][j] === 0) {\n          this.ctx.fillStyle = '#fff';\n          this.ctx.fillRect(0, 0, this.itemSize - 4, this.itemSize - 4);\n\n          // zero block info to zeroBlock variable\n          this.zeroBlock = {\n            name: this.frameSize.blocksMap[i][j],\n            x: Math.floor(j * (this.itemSize)),\n            y: Math.floor(i * (this.itemSize)),\n            width: Math.floor(this.itemSize),\n            height: Math.floor(this.itemSize),\n            row: i + 1,\n            col: j + 1,\n          }\n        } else this.ctx.fillStyle = '#000';\n\n        this.ctx.textAlign = 'center';\n        this.ctx.textBaseline = 'middle';\n        this.ctx.font = window.innerWidth < 400 && this.frameSize.id > 5\n          ? \"12px sans-serif\"\n          : \"20px sans-serif\";\n        window.innerWidth < 400 && this.frameSize.id > 5\n          ? this.ctx.fillText(this.frameSize.blocksMap[i][j], this.itemSize / 2, this.itemSize / 2)\n          : this.ctx.fillText(this.frameSize.blocksMap[i][j], this.itemSize / 2, this.itemSize / 2)\n        this.ctx.restore();\n\n        // push new block info to blocks array\n        tempBlocks.push({\n          name: this.frameSize.blocksMap[i][j],\n          x: Math.floor(j * this.itemSize),\n          y: Math.floor(i * this.itemSize),\n          width: Math.floor(this.itemSize),\n          height: Math.floor(this.itemSize),\n          row: i + 1,\n          col: j + 1,\n        })\n\n        this.blocks.length = 0\n        this.blocks = tempBlocks.flat()\n      }\n    }\n  }\n\n  moveBlock(e) {\n    const x = Math.floor(e.offsetX);\n    const y = Math.floor(e.offsetY);\n\n    const drawBlock = () => {\n      this.playAudio().play()\n\n      this.frameSize.blocksMap = this.frameSize.blocksMap.map((arr) => {\n        return arr.map(e => {\n          if (e == 0) e = this.currentBlock.name\n          else if (e == this.currentBlock.name) e = 0\n          return e\n        })\n      })\n\n\n      this.moves += 1\n      this.movesElem.textContent = this.moves\n\n      this.setCanvas()\n      if (!this.isSolved()) this.setCanvas()\n      else this.gameOver()\n\n    }\n\n    if (this.isClickOnBlock(x, y)) {\n\n      if (this.currentBlock.col == this.zeroBlock.col) {\n        if (this.currentBlock.y == this.zeroBlock.y + this.zeroBlock.height) drawBlock()\n        if (this.currentBlock.y + this.zeroBlock.height == this.zeroBlock.y) drawBlock()\n      }\n\n      if (this.currentBlock.row == this.zeroBlock.row) {\n        if (this.currentBlock.x + this.currentBlock.width == this.zeroBlock.x) drawBlock()\n        if (this.currentBlock.x == this.zeroBlock.x + this.zeroBlock.width) drawBlock()\n      }\n    }\n  }\n\n  start() {\n    document.querySelector('.start').classList.add('active')\n    if (document.querySelector('.message')) document.querySelector('.message').remove();\n\n    if (this.isGame === true) {\n      this.clearMoves();\n      this.clearTimer();\n      this.minutes = 0;\n      this.seconds = 0;\n\n      this.frameSize.blocksMap = this.getRandomBlocks(this.frameSize.id).slice()\n      // setCurrentBlocksMap(this.frameSize.id)\n      this.setCanvas()\n    }\n\n    this.setCanvas()\n    this.timer();\n    this.isGame = true;\n    console.log('Game started');\n  }\n\n  stop() {\n    document.querySelector('.start').classList.remove('active')\n    clearInterval(this.isTimer);\n    this.isGame = false;\n    console.log('Game stopped');\n  }\n\n  result() {\n    this.message('result')\n    document.querySelector('.result').classList.add('active')\n  }\n\n  timer() {\n    console.log('Timer Started')\n\n    this.isTimer = setInterval(() => {\n      if (this.seconds == 59) {\n        this.minutes += 1\n        this.seconds = 0\n      }\n      this.seconds += 1\n\n      this.timerElem.textContent = `${String(this.minutes).length < 2 ? 0 : ''}${this.minutes}:${String(this.seconds).length < 2 ? 0 : ''}${this.seconds}`\n    }, 1000)\n  }\n\n  clearTimer() {\n    clearInterval(this.isTimer);\n    this.timerElem.textContent = `00:00`;\n    this.frameSize.time.minutes = 0;\n    this.frameSize.time.seconds = 0;\n  }\n\n  clearMoves() {\n    this.moves = 0;\n    this.movesElem.textContent = 0;\n    // this.frameSize.moves = 0;\n  }\n\n  message(type, str) {\n\n    const messages = {\n      result: `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__header\"><b>YOUR RESULTS</b></div>\n        <div class=\"message__frame-size\">Frame size: ${this.frameSize.id}x${this.frameSize.id}</div>\n        <div class=\"message__time\">Time: ${String(this.frameSize.time.minutes).length < 2 ? 0 : ''}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length < 2 ? 0 : ''}${this.frameSize.time.seconds}</div>\n        <div class=\"message__moves\">Moves: ${this.moves}</div>\n        <div class=\"message__moves\"><b>Best result:</b> Moves: ${this.frameSize.best.moves} | Time: ${String(this.frameSize.best.time.minutes).length < 2 ? 0 : ''}${this.frameSize.best.time.minutes}:${String(this.frameSize.best.time.seconds).length < 2 ? 0 : ''}${this.frameSize.best.time.seconds}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`,\n\n      winner: `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__header\"><b>Hooray! You solved the puzzle in ${String(this.frameSize.time.minutes).length < 2 ? 0 : ''}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length < 2 ? 0 : ''}${this.frameSize.time.seconds} and ${this.moves} moves!</b></div>\n        <div class=\"message__moves\"><b>Best result:</b> Moves: ${this.frameSize.best.moves} | Time: ${String(this.frameSize.best.time.minutes).length < 2 ? 0 : ''}${this.frameSize.best.time.minutes}:${String(this.frameSize.best.time.seconds).length < 2 ? 0 : ''}${this.frameSize.best.time.seconds}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`,\n\n      message: `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__body\">${str}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`,\n    }\n\n    for (let key in messages) {\n      if (key == type) {\n        if (document.querySelector('.message')) document.querySelector('.message').remove()\n        this.wrap.insertAdjacentHTML('afterbegin', messages[key])\n        document.querySelector('.message__button').addEventListener('click', () => {\n          document.querySelector('.result').classList.remove('active')\n          document.querySelector('.message').remove()\n        })\n      }\n    }\n  }\n\n  save() {\n    const s = this.info.filter(e => e.id == this.frameSize.id)[0]\n\n    s.moves = this.moves\n    s.time.minutes = this.minutes\n    s.time.seconds = this.seconds\n    s.blocksMap = this.frameSize.blocksMap\n\n    if (this.isSolved()) {\n      s.best.time.minutes = this.time.minutes;\n      s.best.time.seconds = this.time.seconds;\n      s.best.moves = this.moves;\n    }\n\n\n    localStorage.setItem('info', JSON.stringify(this.info))\n    console.log('Game saved')\n  }\n\n  getFrameSize(fs) {\n    return JSON.parse(JSON.stringify(this.info.filter(e => e.id === fs)[0]))\n  }\n\n  setFrameSize(fs) {\n\n    if (this.frameSize) this.info.filter(e => e.id === this.frameSize.id)[0].last = false\n    this.info.filter(e => e.id === fs)[0].last = true\n    this.frameSize = this.getFrameSize(fs)\n\n  }\n\n  restore(fs) {\n\n    if (localStorage.getItem('info')) this.info = JSON.parse(localStorage.getItem('info'))\n\n    const s = this.info.filter(e => e.id == fs)[0]\n    this.setFrameSize(fs)\n    this.setCurrentBlocksMap(fs)\n\n    this.timerElem.textContent = `${String(this.frameSize.time.minutes).length < 2 ? 0 : ''}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length < 2 ? 0 : ''}${this.frameSize.time.seconds}`;\n    this.moves = this.frameSize.moves\n    this.movesElem.textContent = this.frameSize.moves\n    this.frameSizeInfoElem.textContent = `${this.frameSize.id}x${this.frameSize.id}`;\n\n  }\n\n  isClickOnBlock(x, y) {\n    for (let block of this.blocks) {\n      if (x >= block.x && x <= (block.x + block.width) && y >= block.y && y <= (block.y + block.height)) {\n        this.currentBlock = block\n        return true\n      }\n    }\n    return false\n  }\n\n\n  isSolved() {\n    const w = this.frameSize.winnerBlocksResult.slice()\n    const c = this.frameSize.blocksMap.flat()\n    w.splice(0, 1)\n    c.splice(c.length - 1, 1)\n    return w.every((e, i) => e == c[i])\n  }\n\n  gameOver() {\n    this.save();\n    this.message('winner', 'YOU WON!!!');\n    console.log('Winner!');\n  }\n\n  playAudio() {\n    return new Audio('./assets/audio/adriantnt_u_click.mp3');\n  }\n}\n\n\nexport default Game;\n\n\n\n"],"names":["constructor","setting","this","info","id","time","minutes","seconds","moves","blocksMap","winnerBlocksResult","Array","keys","best","last","defaultFSid","itemSize","isGame","isTimer","canvas","document","createElement","ctx","getContext","blocks","zeroBlock","currentBlock","createPage","init","restore","console","log","frameSize","setCanvas","playAudio","window","addEventListener","innerWidth","Math","floor","e","target","moveBlock","startBtn","start","stopBtn","stop","saveBtn","save","resultBtn","result","classList","contains","clearMoves","clearTimer","dataset","action","frameSizeInfoElem","textContent","querySelector","container","className","body","prepend","h1","buttons","append","button","b","currentInfo","insertAdjacentHTML","gameContainer","frameSizeInfo","otherFrameSizes","innerHTML","a","href","setAttribute","movesElem","wrap","timerElem","getRandomBlocks","fs","s","filter","arr","slice","res","i","length","j","random","push","splice","setCurrentBlocksMap","add","width","height","insertAdjacentElement","tempBlocks","translate","fillStyle","fillRect","name","x","y","row","col","textAlign","textBaseline","font","fillText","flat","offsetX","offsetY","drawBlock","play","map","isSolved","gameOver","isClickOnBlock","remove","timer","clearInterval","message","setInterval","String","type","str","messages","winner","key","localStorage","setItem","JSON","stringify","getFrameSize","parse","setFrameSize","getItem","block","w","c","every","Audio"],"sourceRoot":""}