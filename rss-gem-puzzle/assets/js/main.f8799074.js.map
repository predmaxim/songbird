{"version":3,"file":"assets/js/main.f8799074.js","mappings":"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","sources":["webpack://rss-gem-puzzle/./src/main.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n\n  class Game {\n\n    constructor(setting) {\n      this.setting = setting;\n      this.movesElem = document.querySelector(this.setting.moves);\n      this.wrap = document.querySelector(this.setting.wrap);\n      this.startBtn = document.querySelector(this.setting.startBtn);\n      this.stopBtn = document.querySelector(this.setting.stopBtn);\n      this.saveBtn = document.querySelector(this.setting.saveBtn);\n      this.resultBtn = document.querySelector(this.setting.resultBtn);\n      this.timerElem = document.querySelector(this.setting.timerElem);\n      this.frameSizeInfoElem = document.querySelector(this.setting.frameSizeInfoElem);\n      this.frameSizeInfoElem = document.querySelector(this.setting.frameSizeInfoElem);\n      this.frameSize = 4;\n      this.moves = 0,\n        this.info = {\n          frameSize: this.frameSize,\n          moves: 0,\n          blocks: [],\n          time: { minutes: 0, seconds: 0 },\n          best: { time: { minutes: 0, seconds: 0 }, moves: 0, frameSize: 0, },\n          blocksNumbers: [],\n        };\n      this.itemSize = 0;\n      this.blocksNumbers = [];\n      this.isGame = false;\n      this.isTimer = 0;\n      this.canvas = document.createElement('canvas');\n      this.ctx = this.canvas.getContext('2d');\n      this.blocks = [];\n      this.zeroBlock = [];\n      this.currentBlock = {}\n      this.init();\n    }\n\n    init() {\n      // this.restore();\n      this.info.blocksNumbers.length == 0 ? this.setPlayField() : this.blocksNumbers = this.info.blocksNumbers;\n      this.setCanvas();\n\n      window.addEventListener('resize', () => {\n        if (window.innerWidth < 900) {\n          this.itemSize = Math.floor(window.innerWidth / (this.frameSize + 2))\n          this.setCanvas();\n        } else this.itemSize = this.setting.itemSize\n      })\n\n      document.addEventListener('click', (e) => {\n        if (e.target == this.canvas && this.isGame) this.moveBlock(e);\n        if (e.target == this.startBtn) this.start();\n        if (e.target == this.stopBtn) this.stop();\n        if (e.target == this.saveBtn) this.save();\n        if (e.target == this.resultBtn) this.result();\n        if (e.target.classList.contains('frame-size')) {\n          this.frameSize = +e.target.dataset.action;\n          this.frameSizeInfoElem.textContent = `${+e.target.dataset.action}x${+e.target.dataset.action}`;\n          this.info.frameSize = this.frameSize\n          this.stop();\n          this.setCanvas();\n        }\n      })\n    }\n\n    setPlayField() {\n\n      const arr = Array(this.frameSize * this.frameSize)\n        .fill().map((_, i) => i).sort(() => Math.random() - 0.5)\n\n      const res = []\n\n      while (res.length < this.frameSize) {\n        res.push(arr.splice(0, this.frameSize));\n      }\n      this.blocksNumbers = res;\n      // console.log(this.blocksNumbers)\n      return res\n    }\n\n    save() {\n      localStorage.setItem('info', JSON.stringify(this.info))\n      console.log('Game saved')\n    }\n\n    restore() {\n      if (localStorage.getItem('info')) {\n        this.info = JSON.parse(localStorage.getItem('info'))\n\n        this.timerElem.textContent = `${String(this.info.time.minutes).length < 2 ? 0 : ''}${this.info.time.minutes}:${String(this.info.time.seconds).length < 2 ? 0 : ''}${this.info.time.seconds}`;\n\n        this.frameSize = this.info.frameSize\n        this.frameSizeInfoElem.textContent = `${this.frameSize}x${this.frameSize}`;\n\n        this.movesElem.textContent = this.info.moves\n        // this.blocks.textContent = this.info.blocks\n      }\n    }\n\n    setCanvas() {\n      this.itemSize = window.innerWidth < 900\n        ? Math.floor(window.innerWidth / (this.frameSize + 2))\n        : this.setting.itemSize;\n      this.canvas.classList.add('game')\n      this.canvas.width = this.frameSize * this.itemSize\n      this.canvas.height = this.canvas.width\n\n      this.wrap.insertAdjacentElement('afterbegin', this.canvas);\n\n      let tempBlocks = [];\n      for (let i = 0; i < this.frameSize; i++) {\n        for (let j = 0; j < this.frameSize; j++) {\n          this.ctx.save();\n          this.ctx.translate(j * this.itemSize + 2, i * this.itemSize + 2);\n          this.ctx.fillStyle = '#e2e2e2'\n          this.ctx.fillRect(0, 0, this.itemSize - 4, this.itemSize - 4);\n\n          if (this.blocksNumbers[i][j] === 0) {\n            this.ctx.fillStyle = '#fff';\n            this.ctx.fillRect(0, 0, this.itemSize - 4, this.itemSize - 4);\n\n            // zero block info to zeroBlock variable\n            this.zeroBlock = {\n              name: this.blocksNumbers[i][j],\n              x: Math.floor(j * (this.itemSize)),\n              y: Math.floor(i * (this.itemSize)),\n              width: Math.floor(this.itemSize),\n              height: Math.floor(this.itemSize),\n              row: i + 1,\n              col: j + 1,\n            }\n          } else this.ctx.fillStyle = '#000';\n\n          this.ctx.textAlign = 'center';\n          this.ctx.textBaseline = 'middle';\n          this.ctx.font = window.innerWidth < 400 && this.frameSize > 5\n            ? \"12px sans-serif\"\n            : \"20px sans-serif\";\n          window.innerWidth < 400 && this.frameSize > 5\n            ? this.ctx.fillText(this.blocksNumbers[i][j], this.itemSize / 2, this.itemSize / 2)\n            : this.ctx.fillText(this.blocksNumbers[i][j], this.itemSize / 2, this.itemSize / 2)\n          this.ctx.restore();\n\n          // push new block info to blocks array\n          tempBlocks.push({\n            name: this.blocksNumbers[i][j],\n            x: Math.floor(j * this.itemSize),\n            y: Math.floor(i * this.itemSize),\n            width: Math.floor(this.itemSize),\n            height: Math.floor(this.itemSize),\n            row: i + 1,\n            col: j + 1,\n          })\n          this.blocks.length = 0\n          this.blocks = tempBlocks.flat()\n        }\n      }\n    }\n\n    message(type, str) {\n      const result = `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__header\"><b>YOUR RESULTS</b></div>\n        <div class=\"message__frame-size\">Frame size: ${this.frameSize}x${this.frameSize}</div>\n        <div class=\"message__time\">Time: ${String(this.info.time.minutes).length < 2 ? 0 : ''}${this.info.time.minutes}:${String(this.info.time.seconds).length < 2 ? 0 : ''}${this.info.time.seconds}</div>\n        <div class=\"message__moves\">Moves: ${this.info.moves}</div>\n        <div class=\"message__moves\"><b>Best result:</b> Moves: ${this.info.best.moves} | Time: ${String(this.info.best.time.minutes).length < 2 ? 0 : ''}${this.info.best.time.minutes}:${String(this.info.best.time.seconds).length < 2 ? 0 : ''}${this.info.best.time.seconds}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`\n\n      const message = `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__body\">${str}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`\n\n      if (document.querySelector('.message')) document.querySelector('.message').remove()\n\n      if (type == 'result') {\n        this.wrap.insertAdjacentHTML('afterbegin', result)\n      } else {\n        this.wrap.insertAdjacentHTML('afterbegin', message)\n      }\n\n\n      document.querySelector('.message__button').addEventListener('click', () => document.querySelector('.message').remove())\n\n    }\n\n    isClickOnBlock(x, y) {\n      for (let block of this.blocks) {\n        if (x >= block.x && x <= (block.x + block.width) && y >= block.y && y <= (block.y + block.height)) {\n          this.currentBlock = block\n          return true\n        }\n      }\n      return false\n    }\n\n    moveBlock(e) {\n      const x = Math.floor(e.offsetX);\n      const y = Math.floor(e.offsetY);\n\n      const drawBlock = () => {\n        // this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        // // this.ctx.translate(this.zeroBlock.x, this.zeroBlock.y);\n\n        // this.ctx.fillStyle = '#e2e2e2'\n        // this.ctx.rect(this.zeroBlock.x, this.zeroBlock.y, this.currentBlock.width, this.currentBlock.height);\n        // this.ctx.fill()\n\n        // this.ctx.fillStyle = '#000'\n        // this.ctx.textAlign = 'center';\n        // this.ctx.textBaseline = 'middle';\n        // this.ctx.font = window.innerWidth < 400 && this.frameSize > 5\n        //   ? \"12px sans-serif\"\n        //   : \"20px sans-serif\";\n        // window.innerWidth < 400 && this.frameSize > 5\n        // this.ctx.fillText(this.currentBlock.name, this.zeroBlock.x + this.itemSize / 2, this.zeroBlock.y + this.itemSize / 2)\n\n        this.blocksNumbers = this.blocksNumbers.map((arr) => {\n          return arr.map(e => {\n            if (e == 0) e = this.currentBlock.name\n            else if (e == this.currentBlock.name) e = 0\n            return e\n          })\n\n        })\n\n        this.moves += 1\n        this.info.moves = this.moves\n        this.movesElem.textContent = this.moves\n        // console.log(this.isSolved())\n        this.setCanvas()\n        // if (!this.isSolved()) this.setCanvas()\n        // else this.gameOver()\n      }\n\n\n      if (this.isClickOnBlock(x, y)) {\n\n        if (this.currentBlock.col == this.zeroBlock.col) {\n          if (this.currentBlock.y == this.zeroBlock.y + this.zeroBlock.height) drawBlock()\n          if (this.currentBlock.y + this.zeroBlock.height == this.zeroBlock.y) drawBlock()\n        }\n\n        if (this.currentBlock.row == this.zeroBlock.row) {\n          if (this.currentBlock.x + this.currentBlock.width == this.zeroBlock.x) drawBlock()\n          if (this.currentBlock.x == this.zeroBlock.x + this.zeroBlock.width) drawBlock()\n        }\n      }\n    }\n\n    start() {\n      if (this.isGame == true) this.stop();\n      if (document.querySelector('.message')) document.querySelector('.message').remove();\n      this.info.blocksNumbers.length = 0\n      // this.setPlayField()\n      this.moves = 0\n      this.setCanvas()\n      this.timer();\n      this.isGame = true;\n      console.log('New game started');\n    }\n\n    stop() {\n      clearInterval(this.isTimer);\n      this.setPlayField();\n      this.movesElem.textContent = 0;\n      this.moves = 0\n      this.timerElem.textContent = `00:00`;\n      this.isGame = false;\n      console.log('Game stopped');\n    }\n\n    result() {\n      this.message('result')\n    }\n\n    timer() {\n      console.log('Timer Started')\n      let minutes = 0, seconds = 0\n\n      this.isTimer = setInterval(() => {\n        if (seconds == 59) {\n          minutes += 1\n          seconds = 0\n        }\n\n        seconds += 1\n\n        this.timerElem.textContent = `${String(minutes).length < 2 ? 0 : ''}${minutes}:${String(seconds).length < 2 ? 0 : ''}${seconds}`\n        this.info.time = { minutes, seconds }\n      }, 1000)\n    }\n\n    isSolved() {\n      let res\n      this.blocksNumbers.forEach((arr, i, a) => {\n        res = arr.filter((e, i) => e == i)\n          .every((e, ind) => e == a[i][ind])\n      })\n      return res\n    }\n\n    gameOver() {\n      this.message('winner', 'You winner!!!')\n    }\n  }\n\n  const game = new Game({\n    wrap: '.game-container',\n    startBtn: '.start',\n    stopBtn: '.stop',\n    saveBtn: '.save',\n    resultBtn: '.result',\n    timerElem: '.timer span',\n    moves: '.moves span',\n    frameSizeInfoElem: '.frame-size-info span',\n    itemSize: 80,\n  })\n\n  // draw(num, pos, elem) {\n  //   const frameSizesData = { 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight' }\n\n  //   if (!frameSizesData[num]) return gameContainerElem.insertAdjacentHTML(pos, this.message('Wrong frame size!'))\n\n  //   gameElem.setAttribute('class', `game ${frameSizesData[num]}`)\n\n  //   let random = [];\n  //   const n = num * num - 1;\n  //   while (random.length < n) {\n  //     let r = Math.floor(Math.random() * n) + 1;\n  //     if (!random.includes(r)) random.push(r);\n  //   }\n\n\n  //   const items = [...Array(num).keys()].map(i => `<div class=\"game__item\"><span>${random[i]}</span></div>`)\n  //   return items.map((el) => elem.insertAdjacentHTML(pos, el))\n  // }\n\n\n\n\n\n})\n\n\n\n\n\n"],"names":["document","addEventListener","constructor","setting","this","movesElem","querySelector","moves","wrap","startBtn","stopBtn","saveBtn","resultBtn","timerElem","frameSizeInfoElem","frameSize","info","blocks","time","minutes","seconds","best","blocksNumbers","itemSize","isGame","isTimer","canvas","createElement","ctx","getContext","zeroBlock","currentBlock","init","length","setPlayField","setCanvas","window","innerWidth","Math","floor","e","target","moveBlock","start","stop","save","result","classList","contains","dataset","action","textContent","arr","Array","fill","map","_","i","sort","random","res","push","splice","localStorage","setItem","JSON","stringify","console","log","restore","getItem","parse","String","add","width","height","insertAdjacentElement","tempBlocks","j","translate","fillStyle","fillRect","name","x","y","row","col","textAlign","textBaseline","font","fillText","flat","message","type","str","remove","insertAdjacentHTML","isClickOnBlock","block","offsetX","offsetY","drawBlock","timer","clearInterval","setInterval","isSolved","forEach","a","filter","every","ind","gameOver"],"sourceRoot":""}