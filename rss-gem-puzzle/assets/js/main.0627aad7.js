(()=>{"use strict";new class{constructor(e){this.setting=e,this.info=[{id:3,time:{minutes:0,seconds:0},moves:0,blocksMap:[],winnerBlocksResult:[...Array(9).keys()],best:{time:{minutes:0,seconds:0},moves:0},last:!1},{id:4,time:{minutes:0,seconds:0},moves:0,blocksMap:[],winnerBlocksResult:[...Array(16).keys()],best:{time:{minutes:0,seconds:0},moves:0},last:!1},{id:5,time:{minutes:0,seconds:0},moves:0,blocksMap:[],winnerBlocksResult:[...Array(25).keys()],best:{time:{minutes:0,seconds:0},moves:0},last:!1},{id:6,time:{minutes:0,seconds:0},moves:0,blocksMap:[],winnerBlocksResult:[...Array(36).keys()],best:{time:{minutes:0,seconds:0},moves:0},last:!1},{id:7,time:{minutes:0,seconds:0},moves:0,blocksMap:[],winnerBlocksResult:[...Array(49).keys()],best:{time:{minutes:0,seconds:0},moves:0},last:!1},{id:8,time:{minutes:0,seconds:0},moves:0,blocksMap:[],winnerBlocksResult:[...Array(64).keys()],best:{time:{minutes:0,seconds:0},moves:0},last:!1}],this.defaultFSid=4,this.itemSize=80,this.minutes=0,this.seconds=0,this.moves=0,this.isGame=!1,this.isTimer=0,this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.blocks=[],this.zeroBlock=[],this.currentBlock={},this.sound=this.playAudio(),this.createPage(),this.init()}init(){this.restore(this.defaultFSid),console.log(this.frameSize),this.setCanvas(),this.playAudio(),window.addEventListener("resize",(()=>{window.innerWidth<600?(this.itemSize=Math.floor(window.innerWidth/(this.frameSize.id+2)),this.setCanvas()):window.innerWidth>=600&&(this.itemSize=80)})),document.addEventListener("click",(e=>{e.target==this.canvas&&this.isGame&&this.moveBlock(e),e.target==this.startBtn&&this.start(),e.target==this.stopBtn&&this.stop(),e.target==this.saveBtn&&this.save(),e.target==this.resultBtn&&this.result(),e.target!=this.soundBtn&&e.target!=document.querySelector(".sound img")||(this.sound.muted?(document.querySelector(".sound img").src="./assets/sound_on_icon.svg",this.sound.muted=!1):(this.sound.muted=!0,document.querySelector(".sound img").src="./assets/sound_off_icon.svg")),e.target.classList.contains("frame-size")&&(this.stop(),this.clearMoves(),this.clearTimer(),this.restore(+e.target.dataset.action),this.setCanvas(),this.frameSizeInfoElem.textContent=`${this.frameSize.id}x${this.frameSize.id}`)}))}createPage(){if(!document.querySelector("container")){const e=document.createElement("div");e.className="container",document.body.prepend(e);let t=document.createElement("h1");t.textContent="RSS Gem Puzzle",e.prepend(t);let s=document.createElement("div");s.className="buttons",e.append(s);for(let e of["start","stop","save","result"]){let t=document.createElement("button");t.className=`${e}`,t.textContent=`${e}`,s.append(t)}let i=document.createElement("button");i.className="sound",s.append(i);let n=document.createElement("img");n.src="./assets/sound_on_icon.svg",n.setAttribute("alt","sound"),i.append(n);let o=document.createElement("div");o.className="current-info",e.append(o),o.insertAdjacentHTML("afterbegin",'<div class="timer">Time: <span>00:00</span></div>'),o.insertAdjacentHTML("afterbegin",'<div class="moves">Moves: <span>0</span></div>');let a=document.createElement("div");a.className="game-container",e.append(a);let r=document.createElement("div");r.className="frame-size-info",e.append(r),r.insertAdjacentHTML("afterbegin","Frame size: <span></span></div>");let m=document.createElement("div");m.className="other-frame-sizes",e.append(m),m.innerHTML+="Other sizes:";for(let e of this.info){let t=document.createElement("a");t.href="#",t.className="frame-size",t.setAttribute("data-action",`${e.id}`),t.textContent=`${e.id}x${e.id}`,m.append(t)}this.movesElem=document.querySelector(".moves span"),this.wrap=a,this.startBtn=document.querySelector(".start"),this.stopBtn=document.querySelector(".stop"),this.saveBtn=document.querySelector(".save"),this.resultBtn=document.querySelector(".result"),this.soundBtn=document.querySelector(".sound"),this.timerElem=document.querySelector(".timer span"),this.frameSizeInfoElem=document.querySelector(".frame-size-info span")}}getRandomBlocks(e){const t=this.info.filter((t=>t.id==e))[0],s=t.winnerBlocksResult.slice(),i=[];for(let e=s.length-1;e>0;e--){let t=Math.floor(Math.random()*(e+1));[s[e],s[t]]=[s[t],s[e]]}for(;i.length<t.id;)i.push(s.splice(0,t.id));return i}setCurrentBlocksMap(e){0===this.info.filter((t=>t.id==e))[0].blocksMap.length?this.frameSize.blocksMap=this.getRandomBlocks(e).slice():this.frameSize.blocksMap=this.info.filter((t=>t.id==e))[0].blocksMap.slice()}setCanvas(){window.innerWidth<600?(this.itemSize=Math.floor(window.innerWidth/(this.frameSize.id+2)),this.setCanvas()):window.innerWidth>=600&&(this.itemSize=80),this.canvas.classList.add("game"),this.canvas.width=this.frameSize.id*this.itemSize,this.canvas.height=this.canvas.width,this.wrap.insertAdjacentElement("afterbegin",this.canvas);let e=[];for(let t=0;t<this.frameSize.id;t++)for(let s=0;s<this.frameSize.id;s++)this.ctx.save(),this.ctx.translate(s*this.itemSize+2,t*this.itemSize+2),this.ctx.fillStyle="#e2e2e2",this.ctx.fillRect(0,0,this.itemSize-4,this.itemSize-4),0===this.frameSize.blocksMap[t][s]?(this.ctx.fillStyle="#fff",this.ctx.fillRect(0,0,this.itemSize-4,this.itemSize-4),this.zeroBlock={name:this.frameSize.blocksMap[t][s],x:Math.floor(s*this.itemSize),y:Math.floor(t*this.itemSize),width:Math.floor(this.itemSize),height:Math.floor(this.itemSize),row:t+1,col:s+1}):this.ctx.fillStyle="#000",this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.font=window.innerWidth<400&&this.frameSize.id>5?"12px sans-serif":"20px sans-serif",window.innerWidth<400&&this.frameSize.id,this.ctx.fillText(this.frameSize.blocksMap[t][s],this.itemSize/2,this.itemSize/2),this.ctx.restore(),e.push({name:this.frameSize.blocksMap[t][s],x:Math.floor(s*this.itemSize),y:Math.floor(t*this.itemSize),width:Math.floor(this.itemSize),height:Math.floor(this.itemSize),row:t+1,col:s+1}),this.blocks.length=0,this.blocks=e.flat()}moveBlock(e){const t=Math.floor(e.offsetX),s=Math.floor(e.offsetY),i=()=>{this.sound.muted||this.sound.play(),this.frameSize.blocksMap=this.frameSize.blocksMap.map((e=>e.map((e=>(0==e?e=this.currentBlock.name:e==this.currentBlock.name&&(e=0),e))))),this.moves+=1,this.movesElem.textContent=this.moves,this.setCanvas(),this.isSolved()?this.gameOver():this.setCanvas()};this.isClickOnBlock(t,s)&&(this.currentBlock.col==this.zeroBlock.col&&(this.currentBlock.y==this.zeroBlock.y+this.zeroBlock.height&&i(),this.currentBlock.y+this.zeroBlock.height==this.zeroBlock.y&&i()),this.currentBlock.row==this.zeroBlock.row&&(this.currentBlock.x+this.currentBlock.width==this.zeroBlock.x&&i(),this.currentBlock.x==this.zeroBlock.x+this.zeroBlock.width&&i()))}start(){document.querySelector(".start").classList.add("active"),document.querySelector(".message")&&document.querySelector(".message").remove(),!0===this.isGame&&(this.clearMoves(),this.clearTimer(),this.minutes=0,this.seconds=0,this.frameSize.blocksMap=this.getRandomBlocks(this.frameSize.id).slice(),this.setCanvas()),this.setCanvas(),this.timer(),this.isGame=!0,console.log("Game started")}stop(){document.querySelector(".start").classList.remove("active"),clearInterval(this.isTimer),this.isGame=!1,console.log("Game stopped")}result(){this.message("result"),document.querySelector(".result").classList.add("active")}timer(){console.log("Timer Started"),this.isTimer=setInterval((()=>{59==this.seconds&&(this.minutes+=1,this.seconds=0),this.seconds+=1,this.timerElem.textContent=`${String(this.minutes).length<2?0:""}${this.minutes}:${String(this.seconds).length<2?0:""}${this.seconds}`}),1e3)}clearTimer(){clearInterval(this.isTimer),this.timerElem.textContent="00:00",this.frameSize.time.minutes=0,this.frameSize.time.seconds=0}clearMoves(){this.moves=0,this.movesElem.textContent=0}message(e,t){const s={result:`\n      <div class="message ${e||""}">\n        <div class="message__header"><b>YOUR RESULTS</b></div>\n        <div class="message__frame-size">Frame size: ${this.frameSize.id}x${this.frameSize.id}</div>\n        <div class="message__time">Time: ${String(this.frameSize.time.minutes).length<2?0:""}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length<2?0:""}${this.frameSize.time.seconds}</div>\n        <div class="message__moves">Moves: ${this.moves}</div>\n        <div class="message__moves"><b>Best result:</b> Moves: ${this.frameSize.best.moves} | Time: ${String(this.frameSize.best.time.minutes).length<2?0:""}${this.frameSize.best.time.minutes}:${String(this.frameSize.best.time.seconds).length<2?0:""}${this.frameSize.best.time.seconds}</div>\n        <button class="message__button">Close</button>\n      </div>`,winner:`\n      <div class="message ${e||""}">\n        <div class="message__header"><b>Hooray! You solved the puzzle in ${String(this.frameSize.time.minutes).length<2?0:""}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length<2?0:""}${this.frameSize.time.seconds} and ${this.moves} moves!</b></div>\n        <div class="message__moves"><b>Best result:</b> Moves: ${this.frameSize.best.moves} | Time: ${String(this.frameSize.best.time.minutes).length<2?0:""}${this.frameSize.best.time.minutes}:${String(this.frameSize.best.time.seconds).length<2?0:""}${this.frameSize.best.time.seconds}</div>\n        <button class="message__button">Close</button>\n      </div>`,message:`\n      <div class="message ${e||""}">\n        <div class="message__body">${t}</div>\n        <button class="message__button">Close</button>\n      </div>`};for(let t in s)t==e&&(document.querySelector(".message")&&document.querySelector(".message").remove(),this.wrap.insertAdjacentHTML("afterbegin",s[t]),document.querySelector(".message__button").addEventListener("click",(()=>{document.querySelector(".result").classList.remove("active"),document.querySelector(".message").remove()})))}save(){const e=this.info.filter((e=>e.id==this.frameSize.id))[0];e.moves=this.moves,e.time.minutes=this.minutes,e.time.seconds=this.seconds,e.blocksMap=this.frameSize.blocksMap,this.isSolved()&&(e.best.time.minutes=this.time.minutes,e.best.time.seconds=this.time.seconds,e.best.moves=this.moves),localStorage.setItem("info",JSON.stringify(this.info)),console.log("Game saved")}getFrameSize(e){return JSON.parse(JSON.stringify(this.info.filter((t=>t.id===e))[0]))}setFrameSize(e){this.frameSize&&(this.info.filter((e=>e.id===this.frameSize.id))[0].last=!1),this.info.filter((t=>t.id===e))[0].last=!0,this.frameSize=this.getFrameSize(e)}restore(e){localStorage.getItem("info")&&(this.info=JSON.parse(localStorage.getItem("info"))),this.info.filter((t=>t.id==e))[0],this.setFrameSize(e),this.setCurrentBlocksMap(e),this.timerElem.textContent=`${String(this.frameSize.time.minutes).length<2?0:""}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length<2?0:""}${this.frameSize.time.seconds}`,this.moves=this.frameSize.moves,this.movesElem.textContent=this.frameSize.moves,this.frameSizeInfoElem.textContent=`${this.frameSize.id}x${this.frameSize.id}`}isClickOnBlock(e,t){for(let s of this.blocks)if(e>=s.x&&e<=s.x+s.width&&t>=s.y&&t<=s.y+s.height)return this.currentBlock=s,!0;return!1}isSolved(){const e=this.frameSize.winnerBlocksResult.slice(),t=this.frameSize.blocksMap.flat();return e.splice(0,1),t.splice(t.length-1,1),e.every(((e,s)=>e==t[s]))}gameOver(){this.save(),this.message("winner","YOU WON!!!"),console.log("Winner!")}playAudio(){return new Audio("./assets/adriantnt_u_click.mp3")}}})();
//# sourceMappingURL=main.0627aad7.js.map