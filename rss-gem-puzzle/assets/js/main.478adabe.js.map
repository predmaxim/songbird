{"version":3,"file":"assets/js/main.478adabe.js","mappings":"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","sources":["webpack://rss-gem-puzzle/./src/main.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n\n  class Game {\n    constructor(setting) {\n      this.setting = setting;\n      this.frameSize = this.setting.frameSize;\n      this.itemSize = this.setting.itemSize;\n      this.playField = [];\n      this.movesElem = document.querySelector(this.setting.moves);\n      this.wrap = document.querySelector(this.setting.wrap);\n      this.startBtn = document.querySelector(this.setting.startBtn);\n      this.stopBtn = document.querySelector(this.setting.stopBtn);\n      this.saveBtn = document.querySelector(this.setting.saveBtn);\n      this.resultBtn = document.querySelector(this.setting.resultBtn);\n      this.timerElem = document.querySelector(this.setting.timerElem);\n      this.frameSizeInfo = document.querySelector(this.setting.frameSizeInfo);\n      this.frameSizeBtns = document.querySelectorAll(this.setting.frameSizeBtns);\n      this.canvas = document.createElement('canvas');\n      this.ctx = this.canvas.getContext('2d');\n      this.isGame = false;\n      this.time = 0;\n      this.info = {\n        best: {\n          time: { minutes: 0, seconds: 0 },\n          moves: 0,\n        },\n        moves: 0,\n        currentTime: { minutes: 0, seconds: 0 },\n        frameSize: 0,\n      };\n\n      this.init();\n    }\n\n    init() {\n      this.restore();\n      this.numbers();\n\n      window.addEventListener('resize', () => {\n        if (window.innerWidth < 1024) {\n          1\n          this.itemSize = window.innerWidth / (this.frameSize + 2.5)\n          this.drawCanvas();\n        } else this.itemSize = this.setting.itemSize\n      })\n\n      document.addEventListener('click', (e) => {\n        if (e.target == this.startBtn) {\n          this.start()\n          if (document.querySelector('.message')) document.querySelector('.message').remove()\n        };\n        if (e.target == this.stopBtn) this.stop();\n        if (e.target == this.saveBtn) this.save();\n        if (e.target == this.resultBtn) this.result();\n        if (e.target.classList.contains('frame-size')) {\n          this.frameSize = +e.target.dataset.action;\n          this.frameSizeInfo.textContent = `${+e.target.dataset.action}x${+e.target.dataset.action}`;\n          this.info.frameSize = this.frameSize;\n          this.stop();\n          this.numbers();\n          this.drawCanvas();\n          this.isGame = false\n        }\n      })\n      setTimeout(() => {\n        this.drawCanvas();\n      }, 0);\n\n    }\n\n    numbers() {\n\n      const arr = Array(this.frameSize * this.frameSize)\n        .fill().map((_, i) => i).sort(() => Math.random() - 0.5)\n\n      const res = []\n\n      while (res.length < this.frameSize) {\n        res.push(arr.splice(0, this.frameSize));\n      }\n      this.playField = res;\n      return res\n    }\n\n    restore() {\n      if (localStorage.getItem('info')) {\n        this.info = JSON.parse(localStorage.getItem('info'))\n\n        this.timerElem.textContent = `${String(this.info.currentTime.minutes).length < 2 ? 0 : ''}${this.info.currentTime.minutes}:${String(this.info.currentTime.seconds).length < 2 ? 0 : ''}${this.info.currentTime.seconds}`;\n\n        this.frameSize = this.info.frameSize\n        this.frameSizeInfo.textContent = `${this.info.frameSize}x${this.info.frameSize}`;\n      }\n    }\n\n    drawCanvas() {      \n\n      if (window.innerWidth < 1024) {\n        this.itemSize = window.innerWidth / (this.frameSize + 2.5)\n      } else this.itemSize = this.setting.itemSize\n\n      this.ctx = this.canvas.getContext('2d')\n      this.canvas.classList.add('game')\n      this.canvas.width = this.frameSize * this.itemSize\n      this.canvas.height = this.frameSize * this.itemSize\n\n      this.wrap.insertAdjacentElement('afterbegin', this.canvas);\n\n      for (let i = 0; i < this.frameSize; i++) {\n        if (i == this.frameSize) i++\n        for (let j = 0; j < this.frameSize; j++) {\n          this.ctx.save();\n          this.ctx.translate(j * this.itemSize, i * this.itemSize);\n          this.ctx.strokeStyle = '#e2e2e2'\n          this.ctx.strokeRect(0, 0, this.itemSize, this.itemSize);\n          this.ctx.font = \"20px sans-serif\";\n          this.ctx.textAlign = 'center';\n          this.ctx.fillText(this.playField[i][j], this.itemSize / 2, this.itemSize / 2 + 8)\n          this.ctx.restore();\n        }\n      }\n    }\n\n    message(type, str) {\n      const result = `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__header\"><b>YOUR RESULTS</b></div>\n        <div class=\"message__frame-size\">Frame size: ${this.info.frameSize}x${this.info.frameSize}</div>\n        <div class=\"message__time\">Time: ${String(this.info.currentTime.minutes).length < 2 ? 0 : ''}${this.info.currentTime.minutes}:${String(this.info.currentTime.seconds).length < 2 ? 0 : ''}${this.info.currentTime.seconds}</div>\n        <div class=\"message__moves\">Moves: ${this.info.moves}</div>\n        <div class=\"message__moves\"><b>Best result:</b> Moves: ${this.info.best.moves} | Time: ${String(this.info.best.time.minutes).length < 2 ? 0 : ''}${this.info.best.time.minutes}:${String(this.info.best.time.seconds).length < 2 ? 0 : ''}${this.info.best.time.seconds}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`\n\n      const message = `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__body\">${str}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`\n\n      if (document.querySelector('.message')) document.querySelector('.message').remove()\n\n      if (type == 'result') {\n        this.wrap.insertAdjacentHTML('afterbegin', result)\n      } else {\n        this.wrap.insertAdjacentHTML('afterbegin', message)\n      }\n\n\n      document.querySelector('.message__button').addEventListener('click', () => document.querySelector('.message').remove())\n\n    }\n\n    save() {\n      localStorage.setItem('info', JSON.stringify(this.info))\n      console.log('Game saved')\n    }\n\n    start() {\n      if (this.isGame == true) this.stop();\n      this.drawCanvas()\n      this.newGame();\n      this.timer();\n      this.isGame = true;\n      console.log('New game started');\n    }\n\n    stop() {\n      clearInterval(this.time);\n      this.numbers();\n      this.movesElem.textContent = 0;\n      this.timerElem.textContent = `00:00`;\n      this.isGame = false;\n      console.log('Game stopped');\n    }\n\n    result() {\n      this.message('result')\n    }\n\n    timer() {\n      console.log('Timer Started')\n      let minutes = 0, seconds = 0\n\n      this.time = setInterval(() => {\n        if (seconds == 59) {\n          minutes += 1\n          seconds = 0\n        }\n\n        seconds += 1\n\n        this.timerElem.textContent = `${String(minutes).length < 2 ? 0 : ''}${minutes}:${String(seconds).length < 2 ? 0 : ''}${seconds}`\n        this.info.currentTime = { minutes, seconds }\n      }, 1000)\n    }\n\n    newGame() {\n\n\n      return this\n\n    }\n  }\n\n  const game = new Game({\n    wrap: '.game-container',\n    frameSize: 4,\n    itemSize: 90,\n    startBtn: '.start',\n    stopBtn: '.stop',\n    saveBtn: '.save',\n    resultBtn: '.result',\n    timerElem: '.timer span',\n    moves: '.moves span',\n    frameSizeBtns: '.frame-size',\n    frameSizeInfo: '.frame-size-info span'\n  })\n\n  // draw(num, pos, elem) {\n  //   const frameSizesData = { 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight' }\n\n  //   if (!frameSizesData[num]) return gameContainerElem.insertAdjacentHTML(pos, this.message('Wrong frame size!'))\n\n  //   gameElem.setAttribute('class', `game ${frameSizesData[num]}`)\n\n  //   let random = [];\n  //   const n = num * num - 1;\n  //   while (random.length < n) {\n  //     let r = Math.floor(Math.random() * n) + 1;\n  //     if (!random.includes(r)) random.push(r);\n  //   }\n\n\n  //   const items = [...Array(num).keys()].map(i => `<div class=\"game__item\"><span>${random[i]}</span></div>`)\n  //   return items.map((el) => elem.insertAdjacentHTML(pos, el))\n  // }\n})\n\n\n\n\n\n"],"names":["document","addEventListener","constructor","setting","this","frameSize","itemSize","playField","movesElem","querySelector","moves","wrap","startBtn","stopBtn","saveBtn","resultBtn","timerElem","frameSizeInfo","frameSizeBtns","querySelectorAll","canvas","createElement","ctx","getContext","isGame","time","info","best","minutes","seconds","currentTime","init","restore","numbers","window","innerWidth","drawCanvas","e","target","start","remove","stop","save","result","classList","contains","dataset","action","textContent","setTimeout","arr","Array","fill","map","_","i","sort","Math","random","res","length","push","splice","localStorage","getItem","JSON","parse","String","add","width","height","insertAdjacentElement","j","translate","strokeStyle","strokeRect","font","textAlign","fillText","message","type","str","insertAdjacentHTML","setItem","stringify","console","log","newGame","timer","clearInterval","setInterval"],"sourceRoot":""}