{"version":3,"file":"assets/js/main.c20356fd.js","mappings":"mBAEa,ICFb,MAEEA,cACEC,KAAKC,KAAO,GACZD,KAAKE,YAAc,EACnBF,KAAKG,SAAW,GAChBH,KAAKI,QAAU,EACfJ,KAAKK,QAAU,EACfL,KAAKM,MAAQ,EACbN,KAAKO,QAAS,EACdP,KAAKQ,QAAU,EACfR,KAAKS,OAASC,SAASC,cAAc,UACrCX,KAAKY,IAAMZ,KAAKS,OAAOI,WAAW,MAClCb,KAAKc,OAAS,GACdd,KAAKe,UAAY,GACjBf,KAAKgB,aAAe,CAAC,EACrBhB,KAAKiB,MAAQjB,KAAKkB,YAClBlB,KAAKmB,MACP,CAEAA,OAiBEnB,KAAKC,KAfI,IAAImB,MAAM,GAAGC,QAAQC,KAAI,CAACC,EAAIC,KACvB,CACVC,GAAID,EAAI,EACRE,KAAM,CAAEtB,QAAS,EAAGC,QAAS,GAC7BC,MAAO,EACPqB,UAAW,GACXC,mBAAoB,IAAIR,OAAOI,EAAI,IAAMA,EAAI,IAAIH,QACjDQ,KAAM,CACJH,KAAM,CAAEtB,QAAS,EAAGC,QAAS,GAC7BC,MAAO,GAETwB,MAAM,MAKZ9B,KAAK+B,aACL/B,KAAKgC,QACLhC,KAAKiC,QAAQjC,KAAKE,aAClBF,KAAKkC,YACLlC,KAAKkB,YAILR,SAASyB,iBAAiB,SAAUC,IAC9BA,EAAEC,QAAUrC,KAAKS,QAAUT,KAAKO,QAAQP,KAAKsC,UAAUF,GACvDA,EAAEC,QAAUrC,KAAKuC,UAAUvC,KAAKwC,QAChCJ,EAAEC,QAAUrC,KAAKyC,SAASzC,KAAK0C,OAC/BN,EAAEC,QAAUrC,KAAK2C,SAAS3C,KAAK4C,OAC/BR,EAAEC,QAAUrC,KAAK6C,WAAW7C,KAAK8C,SACjCV,EAAEC,QAAUrC,KAAK+C,UAAYX,EAAEC,QAAU3B,SAASsC,cAAc,gBAE9DhD,KAAKiB,MAAMgC,OACbvC,SAASsC,cAAc,cAAcE,IAAM,6BAC3ClD,KAAKiB,MAAMgC,OAAQ,IAEnBjD,KAAKiB,MAAMgC,OAAQ,EACnBvC,SAASsC,cAAc,cAAcE,IAAM,+BAG7ClD,KAAK+C,SAASI,UAAUC,OAAO,WAG7BhB,EAAEC,OAAOc,UAAUE,SAAS,gBAE9BrD,KAAK0C,OACL1C,KAAKsD,aACLtD,KAAKuD,aAELvD,KAAKiC,SAASG,EAAEC,OAAOmB,QAAQC,QAE/BzD,KAAKkC,YACLlC,KAAK0D,kBAAkBC,YAAc,GAAG3D,KAAK4D,UAAUnC,MAAMzB,KAAK4D,UAAUnC,KAC9E,GAEJ,CAEAM,aACE,IAAKrB,SAASsC,cAAc,aAAc,CAExC,MAAMa,EAAYnD,SAASC,cAAc,OACzCkD,EAAUC,UAAY,YACtBpD,SAASqD,KAAKC,QAAQH,GAEtB,IAAII,EAAKvD,SAASC,cAAc,MAChCsD,EAAGN,YAAc,iBACjBE,EAAUG,QAAQC,GAElB,IAAIC,EAAUxD,SAASC,cAAc,OACrCuD,EAAQJ,UAAY,UACpBD,EAAUM,OAAOD,GAEjB,IAAK,IAAIE,IAAU,CAAC,QAAS,OAAQ,OAAQ,UAAW,CACtD,IAAIC,EAAI3D,SAASC,cAAc,UAC/B0D,EAAEP,UAAY,GAAGM,IACjBC,EAAEV,YAAc,GAAGS,IACnBF,EAAQC,OAAOE,EACjB,CAEA,IAAIpD,EAAQP,SAASC,cAAc,UACnCM,EAAM6C,UAAY,QAClBI,EAAQC,OAAOlD,GACf,IAAIqD,EAAW5D,SAASC,cAAc,OACtC2D,EAASpB,IAAM,6BACfoB,EAASC,aAAa,MAAO,SAC7BtD,EAAMkD,OAAOG,GAEb,IAAIE,EAAc9D,SAASC,cAAc,OACzC6D,EAAYV,UAAY,eACxBD,EAAUM,OAAOK,GAEjBA,EAAYC,mBAAmB,aAAc,qDAC7CD,EAAYC,mBAAmB,aAAc,kDAE7C,IAAIC,EAAgBhE,SAASC,cAAc,OAC3C+D,EAAcZ,UAAY,iBAC1BD,EAAUM,OAAOO,GAEjB,IAAIC,EAAgBjE,SAASC,cAAc,OAC3CgE,EAAcb,UAAY,kBAC1BD,EAAUM,OAAOQ,GAEjBA,EAAcF,mBAAmB,aAAc,mCAE/C,IAAIG,EAAkBlE,SAASC,cAAc,OAC7CiE,EAAgBd,UAAY,oBAC5BD,EAAUM,OAAOS,GAEjBA,EAAgBC,WAAa,eAE7B,IAAK,IAAIjB,KAAa5D,KAAKC,KAAM,CAC/B,IAAI6E,EAAIpE,SAASC,cAAc,KAC/BmE,EAAEC,KAAO,IACTD,EAAEhB,UAAY,aACdgB,EAAEP,aAAa,cAAe,GAAGX,EAAUnC,MAC3CqD,EAAEnB,YAAc,GAAGC,EAAUnC,MAAMmC,EAAUnC,KAC7CmD,EAAgBT,OAAOW,EACzB,CAEA9E,KAAKgF,UAAYtE,SAASsC,cAAc,eACxChD,KAAKiF,KAAOP,EACZ1E,KAAKuC,SAAW7B,SAASsC,cAAc,UACvChD,KAAKyC,QAAU/B,SAASsC,cAAc,SACtChD,KAAK2C,QAAUjC,SAASsC,cAAc,SACtChD,KAAK6C,UAAYnC,SAASsC,cAAc,WACxChD,KAAK+C,SAAWrC,SAASsC,cAAc,UACvChD,KAAKkF,UAAYxE,SAASsC,cAAc,eACxChD,KAAK0D,kBAAoBhD,SAASsC,cAAc,wBAClD,CACF,CAEAmC,gBAAgBC,GACd,MAAMC,EAAIrF,KAAKC,KAAKqF,QAAOlD,GAAKA,EAAEX,IAAM2D,IAAI,GAEtCG,EAAMF,EAAEzD,mBAAmB4D,QAE3BC,EAAM,GAEZ,IAAK,IAAIjE,EAAI+D,EAAIG,OAAS,EAAGlE,EAAI,EAAGA,IAAK,CACvC,IAAImE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYtE,EAAI,KACvC+D,EAAI/D,GAAI+D,EAAII,IAAM,CAACJ,EAAII,GAAIJ,EAAI/D,GAClC,CAEA,KAAOiE,EAAIC,OAASL,EAAE5D,IACpBgE,EAAIM,KAAKR,EAAIS,OAAO,EAAGX,EAAE5D,KAG3B,OAAOgE,CACT,CAEAQ,oBAAoBb,GAC4C,IAA1DpF,KAAKC,KAAKqF,QAAOlD,GAAKA,EAAEX,IAAM2D,IAAI,GAAGzD,UAAU+D,OAEjD1F,KAAK4D,UAAUjC,UAAY3B,KAAKmF,gBAAgBC,GAAII,QAE/CxF,KAAK4D,UAAUjC,UAAY3B,KAAKC,KAAKqF,QAAOlD,GAAKA,EAAEX,IAAM2D,IAAI,GAAGzD,UAAU6D,OACnF,CAEAtD,YAEElC,KAAKS,OAAO0C,UAAU+C,IAAI,QAC1BlG,KAAKS,OAAO0F,MAAQnG,KAAK4D,UAAUnC,GAAKzB,KAAKG,SAC7CH,KAAKS,OAAO2F,OAASpG,KAAKS,OAAO0F,MAEjCnG,KAAKiF,KAAKoB,sBAAsB,aAAcrG,KAAKS,QAEnD,IAAI6F,EAAa,GACjB,IAAK,IAAI9E,EAAI,EAAGA,EAAIxB,KAAK4D,UAAUnC,GAAID,IACrC,IAAK,IAAImE,EAAI,EAAGA,EAAI3F,KAAK4D,UAAUnC,GAAIkE,IACrC3F,KAAKY,IAAIgC,OACT5C,KAAKY,IAAI2F,UAAUZ,EAAI3F,KAAKG,SAAW,EAAGqB,EAAIxB,KAAKG,SAAW,GAC9DH,KAAKY,IAAI4F,UAAY,UACrBxG,KAAKY,IAAI6F,SAAS,EAAG,EAAGzG,KAAKG,SAAW,EAAGH,KAAKG,SAAW,GAEpB,IAAnCH,KAAK4D,UAAUjC,UAAUH,GAAGmE,IAC9B3F,KAAKY,IAAI4F,UAAY,OACrBxG,KAAKY,IAAI6F,SAAS,EAAG,EAAGzG,KAAKG,SAAW,EAAGH,KAAKG,SAAW,GAG3DH,KAAKe,UAAY,CACf2F,KAAM1G,KAAK4D,UAAUjC,UAAUH,GAAGmE,GAClCgB,EAAGf,KAAKC,MAAMF,EAAK3F,KAAa,UAChC4G,EAAGhB,KAAKC,MAAMrE,EAAKxB,KAAa,UAChCmG,MAAOP,KAAKC,MAAM7F,KAAKG,UACvBiG,OAAQR,KAAKC,MAAM7F,KAAKG,UACxB0G,IAAKrF,EAAI,EACTsF,IAAKnB,EAAI,IAEN3F,KAAKY,IAAI4F,UAAY,OAE5BxG,KAAKY,IAAImG,UAAY,SACrB/G,KAAKY,IAAIoG,aAAe,SACxBhH,KAAKY,IAAIqG,KAAO,kBAChBC,OAAOC,WAAa,KAAOnH,KAAK4D,UAAUnC,GACtCzB,KAAKY,IAAIwG,SAASpH,KAAK4D,UAAUjC,UAAUH,GAAGmE,GAAI3F,KAAKG,SAAW,EAAGH,KAAKG,SAAW,GAEzFH,KAAKY,IAAIqB,UAGTqE,EAAWP,KAAK,CACdW,KAAM1G,KAAK4D,UAAUjC,UAAUH,GAAGmE,GAClCgB,EAAGf,KAAKC,MAAMF,EAAI3F,KAAKG,UACvByG,EAAGhB,KAAKC,MAAMrE,EAAIxB,KAAKG,UACvBgG,MAAOP,KAAKC,MAAM7F,KAAKG,UACvBiG,OAAQR,KAAKC,MAAM7F,KAAKG,UACxB0G,IAAKrF,EAAI,EACTsF,IAAKnB,EAAI,IAGX3F,KAAKc,OAAO4E,OAAS,EACrB1F,KAAKc,OAASwF,EAAWe,MAG/B,CAEA/E,UAAUF,GACR,MAAMuE,EAAIf,KAAKC,MAAMzD,EAAEkF,SACjBV,EAAIhB,KAAKC,MAAMzD,EAAEmF,SAEjBC,EAAY,KACXxH,KAAKiB,MAAMgC,OAAOjD,KAAKiB,MAAMwG,OAElCzH,KAAK4D,UAAUjC,UAAY3B,KAAK4D,UAAUjC,UAAUL,KAAKiE,GAChDA,EAAIjE,KAAIc,IACJ,GAALA,EAAQA,EAAIpC,KAAKgB,aAAa0F,KACzBtE,GAAKpC,KAAKgB,aAAa0F,OAAMtE,EAAI,GACnCA,OAKXpC,KAAKM,OAAS,EACdN,KAAK4D,UAAUtD,MAAQN,KAAKM,MAC5BN,KAAKgF,UAAUrB,YAAc3D,KAAKM,MAElCN,KAAKkC,YACAlC,KAAK0H,WACL1H,KAAK2H,WADY3H,KAAKkC,WACR,EAIjBlC,KAAK4H,eAAejB,EAAGC,KAErB5G,KAAKgB,aAAa8F,KAAO9G,KAAKe,UAAU+F,MACtC9G,KAAKgB,aAAa4F,GAAK5G,KAAKe,UAAU6F,EAAI5G,KAAKe,UAAUqF,QAAQoB,IACjExH,KAAKgB,aAAa4F,EAAI5G,KAAKe,UAAUqF,QAAUpG,KAAKe,UAAU6F,GAAGY,KAGnExH,KAAKgB,aAAa6F,KAAO7G,KAAKe,UAAU8F,MACtC7G,KAAKgB,aAAa2F,EAAI3G,KAAKgB,aAAamF,OAASnG,KAAKe,UAAU4F,GAAGa,IACnExH,KAAKgB,aAAa2F,GAAK3G,KAAKe,UAAU4F,EAAI3G,KAAKe,UAAUoF,OAAOqB,KAG1E,CAEAhF,QACExC,KAAKuC,SAASY,UAAU+C,IAAI,UACxBxF,SAASsC,cAAc,aAAatC,SAASsC,cAAc,YAAY6E,SAE3E7H,KAAKI,QAAUJ,KAAK4D,UAAUlC,KAAKtB,QACnCJ,KAAKK,QAAUL,KAAK4D,UAAUlC,KAAKrB,SAEf,IAAhBL,KAAKO,SACPP,KAAKsD,aACLtD,KAAKuD,aACLvD,KAAK4D,UAAUjC,UAAY3B,KAAKmF,gBAAgBnF,KAAK4D,UAAUnC,IAAI+D,SAGrExF,KAAKkC,YACLlC,KAAK8H,QACL9H,KAAKO,QAAS,EACdwH,QAAQC,IAAI,eACd,CAEAtF,OACE1C,KAAKuC,SAASY,UAAU0E,OAAO,UAC/BI,cAAcjI,KAAKQ,SACnBR,KAAKO,QAAS,EACdwH,QAAQC,IAAI,eACd,CAEAlF,SACE9C,KAAKkI,QAAQ,UACbxH,SAASsC,cAAc,WAAWG,UAAU+C,IAAI,SAClD,CAEA4B,QACEC,QAAQC,IAAI,iBAEZhI,KAAKQ,QAAU2H,aAAY,KACL,IAAhBnI,KAAKK,UACPL,KAAKI,SAAW,EAChBJ,KAAKK,QAAU,GAEjBL,KAAKK,SAAW,EAEhBL,KAAK4D,UAAUlC,KAAKtB,QAAUJ,KAAKI,QACnCJ,KAAK4D,UAAUlC,KAAKrB,QAAUL,KAAKK,QAEnCL,KAAKkF,UAAUvB,YAAc,GAAGyE,OAAOpI,KAAKI,SAASsF,OAAS,EAAI,EAAI,KAAK1F,KAAKI,WAAWgI,OAAOpI,KAAKK,SAASqF,OAAS,EAAI,EAAI,KAAK1F,KAAKK,SAAO,GACjJ,IACL,CAEAkD,aACE0E,cAAcjI,KAAKQ,SACnBR,KAAKkF,UAAUvB,YAAc,QAC7B3D,KAAKI,QAAU,EACfJ,KAAKK,QAAU,CACjB,CAEAiD,aACEtD,KAAKM,MAAQ,EACbN,KAAKgF,UAAUrB,YAAc,CAE/B,CAEAuE,QAAQG,EAAMC,GAEZ,MAAMC,EAAW,CACfzF,OAAQ,+BACcuF,GAAc,8HAEarI,KAAK4D,UAAUnC,MAAMzB,KAAK4D,UAAUnC,sDAChD2G,OAAOpI,KAAK4D,UAAUlC,KAAKtB,SAASsF,OAAS,EAAI,EAAI,KAAK1F,KAAK4D,UAAUlC,KAAKtB,WAAWgI,OAAOpI,KAAK4D,UAAUlC,KAAKrB,SAASqF,OAAS,EAAI,EAAI,KAAK1F,KAAK4D,UAAUlC,KAAKrB,6DACrKL,KAAKM,+EACeN,KAAK4D,UAAU/B,KAAKvB,iBAAiB8H,OAAOpI,KAAK4D,UAAU/B,KAAKH,KAAKtB,SAASsF,OAAS,EAAI,EAAI,KAAK1F,KAAK4D,UAAU/B,KAAKH,KAAKtB,WAAWgI,OAAOpI,KAAK4D,UAAU/B,KAAKH,KAAKrB,SAASqF,OAAS,EAAI,EAAI,KAAK1F,KAAK4D,UAAU/B,KAAKH,KAAKrB,sFAI3RmI,OAAQ,+BACcH,GAAc,kFACiCD,OAAOpI,KAAK4D,UAAUlC,KAAKtB,SAASsF,OAAS,EAAI,EAAI,KAAK1F,KAAK4D,UAAUlC,KAAKtB,WAAWgI,OAAOpI,KAAK4D,UAAUlC,KAAKrB,SAASqF,OAAS,EAAI,EAAI,KAAK1F,KAAK4D,UAAUlC,KAAKrB,eAAeL,KAAKM,0FACrMN,KAAK4D,UAAU/B,KAAKvB,iBAAiB8H,OAAOpI,KAAK4D,UAAU/B,KAAKH,KAAKtB,SAASsF,OAAS,EAAI,EAAI,KAAK1F,KAAK4D,UAAU/B,KAAKH,KAAKtB,WAAWgI,OAAOpI,KAAK4D,UAAU/B,KAAKH,KAAKrB,SAASqF,OAAS,EAAI,EAAI,KAAK1F,KAAK4D,UAAU/B,KAAKH,KAAKrB,sFAI3R6H,QAAS,+BACaG,GAAc,4CACLC,iFAKjC,IAAK,IAAIG,KAAOF,EACVE,GAAOJ,IACL3H,SAASsC,cAAc,aAAatC,SAASsC,cAAc,YAAY6E,SAC3E7H,KAAKiF,KAAKR,mBAAmB,aAAc8D,EAASE,IACpD/H,SAASsC,cAAc,oBAAoBb,iBAAiB,SAAS,KACnEzB,SAASsC,cAAc,WAAWG,UAAU0E,OAAO,UACnDnH,SAASsC,cAAc,YAAY6E,QAAO,IAIlD,CAEAjF,OAEM5C,KAAK0H,aAC2B,IAA9B1H,KAAK4D,UAAU/B,KAAKvB,OAIbN,KAAKM,MAAQN,KAAK4D,UAAU/B,KAAKvB,SAH1CN,KAAK4D,UAAU/B,KAAKvB,MAAQN,KAAKM,MACjCN,KAAK4D,UAAU/B,KAAKH,KAAKtB,QAAUJ,KAAKI,QACxCJ,KAAK4D,UAAU/B,KAAKH,KAAKrB,QAAUL,KAAKK,SAU5C,MAAMmB,EAAIxB,KAAKC,KAAKyI,QAAO,CAACC,EAAKvG,EAAGZ,IAAMY,EAAEX,KAAOzB,KAAK4D,UAAUnC,GAAKkH,GAAOnH,EAAImH,GAAK,GACvF3I,KAAKC,KAAKuB,GAAKoH,KAAKC,MAAMD,KAAKE,UAAU9I,KAAK4D,YAE9CmE,QAAQC,IAAIhI,KAAKC,KAAKuB,GAAIxB,KAAK4D,WAG/BmF,aAAaC,QAAQ,OAAQJ,KAAKE,UAAU9I,KAAKC,OACjD8H,QAAQC,IAAI,aACd,CAEAiB,aAAa7D,GACX,OAAOwD,KAAKC,MAAMD,KAAKE,UAAU9I,KAAKC,KAAKqF,QAAOlD,GAAKA,EAAEX,KAAO2D,IAAI,IACtE,CAEA8D,aAAa9D,GAEPpF,KAAK4D,YAAW5D,KAAKC,KAAKqF,QAAOlD,GAAKA,EAAEX,KAAOzB,KAAK4D,UAAUnC,KAAI,GAAGK,MAAO,GAChF9B,KAAKC,KAAKqF,QAAOlD,GAAKA,EAAEX,KAAO2D,IAAI,GAAGtD,MAAO,EAC7C9B,KAAK4D,UAAY5D,KAAKiJ,aAAa7D,EAErC,CAEAnD,QAAQmD,GAEF2D,aAAaI,QAAQ,UAASnJ,KAAKC,KAAO2I,KAAKC,MAAME,aAAaI,QAAQ,UAEpEnJ,KAAKC,KAAKqF,QAAOlD,GAAKA,EAAEX,IAAM2D,IAAI,GAC5CpF,KAAKkJ,aAAa9D,GAClBpF,KAAKiG,oBAAoBb,GAEzBpF,KAAKkF,UAAUvB,YAAc,GAAGyE,OAAOpI,KAAK4D,UAAUlC,KAAKtB,SAASsF,OAAS,EAAI,EAAI,KAAK1F,KAAK4D,UAAUlC,KAAKtB,WAAWgI,OAAOpI,KAAK4D,UAAUlC,KAAKrB,SAASqF,OAAS,EAAI,EAAI,KAAK1F,KAAK4D,UAAUlC,KAAKrB,UACvML,KAAKM,MAAQN,KAAK4D,UAAUtD,MAC5BN,KAAKgF,UAAUrB,YAAc3D,KAAK4D,UAAUtD,MAC5CN,KAAK0D,kBAAkBC,YAAc,GAAG3D,KAAK4D,UAAUnC,MAAMzB,KAAK4D,UAAUnC,IAE9E,CAEAmG,eAAejB,EAAGC,GAChB,IAAK,IAAIwC,KAASpJ,KAAKc,OACrB,GAAI6F,GAAKyC,EAAMzC,GAAKA,GAAMyC,EAAMzC,EAAIyC,EAAMjD,OAAUS,GAAKwC,EAAMxC,GAAKA,GAAMwC,EAAMxC,EAAIwC,EAAMhD,OAExF,OADApG,KAAKgB,aAAeoI,GACb,EAGX,OAAO,CACT,CAGA1B,WACE,MAAM2B,EAAIrJ,KAAK4D,UAAUhC,mBAAmB4D,QACtC8D,EAAItJ,KAAK4D,UAAUjC,UAAU0F,OAGnC,OAFAgC,EAAErD,OAAO,EAAG,GACZsD,EAAEtD,OAAOsD,EAAE5D,OAAS,EAAG,GAChB2D,EAAEE,OAAM,CAACnH,EAAGZ,IAAMY,GAAKkH,EAAE9H,IAClC,CAEAmG,WACE3H,KAAK4C,OACL5C,KAAKkI,QAAQ,SAAU,cACvBH,QAAQC,IAAI,UACd,CAEA9G,YACE,OAAO,IAAIsI,MAAM,iCACnB,CAEAxH,QACEA,MAAM,mIAOR,E","sources":["webpack://rss-gem-puzzle/./src/js/main.js","webpack://rss-gem-puzzle/./src/js/game.js"],"sourcesContent":["import Game from './game';\n\nconst game = new Game()","class Game {\n\n  constructor() {\n    this.info = [];\n    this.defaultFSid = 4;\n    this.itemSize = 80;\n    this.minutes = 0;\n    this.seconds = 0;\n    this.moves = 0;\n    this.isGame = false;\n    this.isTimer = 0;\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.blocks = [];\n    this.zeroBlock = [];\n    this.currentBlock = {};\n    this.sound = this.playAudio();\n    this.init();\n  }\n\n  init() {\n    const createInfoObjs = () => {\n      return [...Array(6).keys()].map((el, i) => {\n        return el = {\n          id: i + 3,\n          time: { minutes: 0, seconds: 0 },\n          moves: 0,\n          blocksMap: [],\n          winnerBlocksResult: [...Array((i + 3) * (i + 3)).keys()],\n          best: {\n            time: { minutes: 0, seconds: 0 },\n            moves: 0,\n          },\n          last: false\n        }\n      })\n    }\n    this.info = createInfoObjs()\n    this.createPage();\n    this.alert()\n    this.restore(this.defaultFSid);\n    this.setCanvas();\n    this.playAudio();\n\n\n\n    document.addEventListener('click', (e) => {\n      if (e.target == this.canvas && this.isGame) this.moveBlock(e);\n      if (e.target == this.startBtn) this.start();\n      if (e.target == this.stopBtn) this.stop();\n      if (e.target == this.saveBtn) this.save();\n      if (e.target == this.resultBtn) this.result();\n      if (e.target == this.soundBtn || e.target == document.querySelector('.sound img')) {\n\n        if (this.sound.muted) {\n          document.querySelector('.sound img').src = './assets/sound_on_icon.svg'\n          this.sound.muted = false\n        } else {\n          this.sound.muted = true\n          document.querySelector('.sound img').src = './assets/sound_off_icon.svg'\n        }\n\n        this.soundBtn.classList.toggle('active')\n      }\n\n      if (e.target.classList.contains('frame-size')) {\n\n        this.stop();\n        this.clearMoves();\n        this.clearTimer();\n\n        this.restore(+e.target.dataset.action);\n\n        this.setCanvas();\n        this.frameSizeInfoElem.textContent = `${this.frameSize.id}x${this.frameSize.id}`\n      }\n    })\n  }\n\n  createPage() {\n    if (!document.querySelector('container')) {\n\n      const container = document.createElement('div')\n      container.className = 'container'\n      document.body.prepend(container)\n\n      let h1 = document.createElement('h1')\n      h1.textContent = 'RSS Gem Puzzle'\n      container.prepend(h1)\n\n      let buttons = document.createElement('div')\n      buttons.className = 'buttons'\n      container.append(buttons)\n\n      for (let button of ['start', 'stop', 'save', 'result']) {\n        let b = document.createElement('button')\n        b.className = `${button}`\n        b.textContent = `${button}`\n        buttons.append(b)\n      }\n\n      let sound = document.createElement('button')\n      sound.className = 'sound'\n      buttons.append(sound)\n      let soundImg = document.createElement('img')\n      soundImg.src = './assets/sound_on_icon.svg'\n      soundImg.setAttribute('alt', 'sound')\n      sound.append(soundImg)\n\n      let currentInfo = document.createElement('div')\n      currentInfo.className = 'current-info'\n      container.append(currentInfo)\n\n      currentInfo.insertAdjacentHTML('afterbegin', '<div class=\"timer\">Time: <span>00:00</span></div>')\n      currentInfo.insertAdjacentHTML('afterbegin', '<div class=\"moves\">Moves: <span>0</span></div>')\n\n      let gameContainer = document.createElement('div')\n      gameContainer.className = 'game-container'\n      container.append(gameContainer)\n\n      let frameSizeInfo = document.createElement('div')\n      frameSizeInfo.className = 'frame-size-info'\n      container.append(frameSizeInfo)\n\n      frameSizeInfo.insertAdjacentHTML('afterbegin', 'Frame size: <span></span></div>')\n\n      let otherFrameSizes = document.createElement('div')\n      otherFrameSizes.className = 'other-frame-sizes'\n      container.append(otherFrameSizes)\n\n      otherFrameSizes.innerHTML += 'Other sizes:'\n\n      for (let frameSize of this.info) {\n        let a = document.createElement('a')\n        a.href = '#'\n        a.className = `frame-size`\n        a.setAttribute('data-action', `${frameSize.id}`)\n        a.textContent = `${frameSize.id}x${frameSize.id}`\n        otherFrameSizes.append(a)\n      }\n\n      this.movesElem = document.querySelector('.moves span')\n      this.wrap = gameContainer\n      this.startBtn = document.querySelector('.start')\n      this.stopBtn = document.querySelector('.stop');\n      this.saveBtn = document.querySelector('.save');\n      this.resultBtn = document.querySelector('.result');\n      this.soundBtn = document.querySelector('.sound');\n      this.timerElem = document.querySelector('.timer span');\n      this.frameSizeInfoElem = document.querySelector('.frame-size-info span');\n    }\n  }\n\n  getRandomBlocks(fs) {\n    const s = this.info.filter(e => e.id == fs)[0]\n\n    const arr = s.winnerBlocksResult.slice()\n\n    const res = []\n\n    for (let i = arr.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n\n    while (res.length < s.id) {\n      res.push(arr.splice(0, s.id));\n    }\n\n    return res;\n  }\n\n  setCurrentBlocksMap(fs) {\n    if (this.info.filter(e => e.id == fs)[0].blocksMap.length === 0) {\n\n      this.frameSize.blocksMap = this.getRandomBlocks(fs).slice()\n\n    } else this.frameSize.blocksMap = this.info.filter(e => e.id == fs)[0].blocksMap.slice()\n  }\n\n  setCanvas() {\n\n    this.canvas.classList.add('game')\n    this.canvas.width = this.frameSize.id * this.itemSize\n    this.canvas.height = this.canvas.width\n\n    this.wrap.insertAdjacentElement('afterbegin', this.canvas);\n\n    let tempBlocks = [];\n    for (let i = 0; i < this.frameSize.id; i++) {\n      for (let j = 0; j < this.frameSize.id; j++) {\n        this.ctx.save();\n        this.ctx.translate(j * this.itemSize + 2, i * this.itemSize + 2);\n        this.ctx.fillStyle = '#e2e2e2'\n        this.ctx.fillRect(0, 0, this.itemSize - 4, this.itemSize - 4);\n\n        if (this.frameSize.blocksMap[i][j] === 0) {\n          this.ctx.fillStyle = '#fff';\n          this.ctx.fillRect(0, 0, this.itemSize - 4, this.itemSize - 4);\n\n          // zero block info to zeroBlock variable\n          this.zeroBlock = {\n            name: this.frameSize.blocksMap[i][j],\n            x: Math.floor(j * (this.itemSize)),\n            y: Math.floor(i * (this.itemSize)),\n            width: Math.floor(this.itemSize),\n            height: Math.floor(this.itemSize),\n            row: i + 1,\n            col: j + 1,\n          }\n        } else this.ctx.fillStyle = '#000';\n\n        this.ctx.textAlign = 'center';\n        this.ctx.textBaseline = 'middle';\n        this.ctx.font = \"20px sans-serif\";\n        window.innerWidth < 400 && this.frameSize.id > 5\n          ? this.ctx.fillText(this.frameSize.blocksMap[i][j], this.itemSize / 2, this.itemSize / 2)\n          : this.ctx.fillText(this.frameSize.blocksMap[i][j], this.itemSize / 2, this.itemSize / 2)\n        this.ctx.restore();\n\n        // push new block info to blocks array\n        tempBlocks.push({\n          name: this.frameSize.blocksMap[i][j],\n          x: Math.floor(j * this.itemSize),\n          y: Math.floor(i * this.itemSize),\n          width: Math.floor(this.itemSize),\n          height: Math.floor(this.itemSize),\n          row: i + 1,\n          col: j + 1,\n        })\n\n        this.blocks.length = 0\n        this.blocks = tempBlocks.flat()\n      }\n    }\n  }\n\n  moveBlock(e) {\n    const x = Math.floor(e.offsetX);\n    const y = Math.floor(e.offsetY);\n\n    const drawBlock = () => {\n      if (!this.sound.muted) this.sound.play()\n\n      this.frameSize.blocksMap = this.frameSize.blocksMap.map((arr) => {\n        return arr.map(e => {\n          if (e == 0) e = this.currentBlock.name\n          else if (e == this.currentBlock.name) e = 0\n          return e\n        })\n      })\n\n\n      this.moves += 1\n      this.frameSize.moves = this.moves\n      this.movesElem.textContent = this.moves\n\n      this.setCanvas()\n      if (!this.isSolved()) this.setCanvas()\n      else this.gameOver()\n\n    }\n\n    if (this.isClickOnBlock(x, y)) {\n\n      if (this.currentBlock.col == this.zeroBlock.col) {\n        if (this.currentBlock.y == this.zeroBlock.y + this.zeroBlock.height) drawBlock()\n        if (this.currentBlock.y + this.zeroBlock.height == this.zeroBlock.y) drawBlock()\n      }\n\n      if (this.currentBlock.row == this.zeroBlock.row) {\n        if (this.currentBlock.x + this.currentBlock.width == this.zeroBlock.x) drawBlock()\n        if (this.currentBlock.x == this.zeroBlock.x + this.zeroBlock.width) drawBlock()\n      }\n    }\n  }\n\n  start() {\n    this.startBtn.classList.add('active')\n    if (document.querySelector('.message')) document.querySelector('.message').remove();\n\n    this.minutes = this.frameSize.time.minutes\n    this.seconds = this.frameSize.time.seconds\n\n    if (this.isGame === true) {\n      this.clearMoves();\n      this.clearTimer();\n      this.frameSize.blocksMap = this.getRandomBlocks(this.frameSize.id).slice()\n    }\n\n    this.setCanvas()\n    this.timer();\n    this.isGame = true;\n    console.log('Game started');\n  }\n\n  stop() {\n    this.startBtn.classList.remove('active')\n    clearInterval(this.isTimer);\n    this.isGame = false;\n    console.log('Game stopped');\n  }\n\n  result() {\n    this.message('result')\n    document.querySelector('.result').classList.add('active')\n  }\n\n  timer() {\n    console.log('Timer Started')\n\n    this.isTimer = setInterval(() => {\n      if (this.seconds == 59) {\n        this.minutes += 1\n        this.seconds = 0\n      }\n      this.seconds += 1\n\n      this.frameSize.time.minutes = this.minutes\n      this.frameSize.time.seconds = this.seconds\n\n      this.timerElem.textContent = `${String(this.minutes).length < 2 ? 0 : ''}${this.minutes}:${String(this.seconds).length < 2 ? 0 : ''}${this.seconds}`\n    }, 1000)\n  }\n\n  clearTimer() {\n    clearInterval(this.isTimer);\n    this.timerElem.textContent = `00:00`;\n    this.minutes = 0;\n    this.seconds = 0;\n  }\n\n  clearMoves() {\n    this.moves = 0;\n    this.movesElem.textContent = 0;\n    // this.frameSize.moves = 0;\n  }\n\n  message(type, str) {\n\n    const messages = {\n      result: `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__header\"><b>YOUR RESULTS</b></div>\n        <div class=\"message__frame-size\">Frame size: ${this.frameSize.id}x${this.frameSize.id}</div>\n        <div class=\"message__time\">Time: ${String(this.frameSize.time.minutes).length < 2 ? 0 : ''}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length < 2 ? 0 : ''}${this.frameSize.time.seconds}</div>\n        <div class=\"message__moves\">Moves: ${this.moves}</div>\n        <div class=\"message__moves\"><b>Best result:</b> Moves: ${this.frameSize.best.moves} | Time: ${String(this.frameSize.best.time.minutes).length < 2 ? 0 : ''}${this.frameSize.best.time.minutes}:${String(this.frameSize.best.time.seconds).length < 2 ? 0 : ''}${this.frameSize.best.time.seconds}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`,\n\n      winner: `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__header\"><b>Hooray! You solved the puzzle in ${String(this.frameSize.time.minutes).length < 2 ? 0 : ''}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length < 2 ? 0 : ''}${this.frameSize.time.seconds} and ${this.moves} moves!</b></div>\n        <div class=\"message__moves\"><b>Best result:</b> Moves: ${this.frameSize.best.moves} | Time: ${String(this.frameSize.best.time.minutes).length < 2 ? 0 : ''}${this.frameSize.best.time.minutes}:${String(this.frameSize.best.time.seconds).length < 2 ? 0 : ''}${this.frameSize.best.time.seconds}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`,\n\n      message: `\n      <div class=\"message ${type ? type : ''}\">\n        <div class=\"message__body\">${str}</div>\n        <button class=\"message__button\">Close</button>\n      </div>`,\n    }\n\n    for (let key in messages) {\n      if (key == type) {\n        if (document.querySelector('.message')) document.querySelector('.message').remove()\n        this.wrap.insertAdjacentHTML('afterbegin', messages[key])\n        document.querySelector('.message__button').addEventListener('click', () => {\n          document.querySelector('.result').classList.remove('active')\n          document.querySelector('.message').remove()\n        })\n      }\n    }\n  }\n\n  save() {\n\n    if (this.isSolved()) {\n      if (this.frameSize.best.moves === 0) {\n        this.frameSize.best.moves = this.moves\n        this.frameSize.best.time.minutes = this.minutes\n        this.frameSize.best.time.seconds = this.seconds\n      } else if (this.moves < this.frameSize.best.moves) {\n        this.frameSize.best.moves = this.moves\n        this.frameSize.best.time.minutes = this.minutes\n        this.frameSize.best.time.seconds = this.seconds\n      }\n    }\n\n\n\n    const i = this.info.reduce((acc, e, i) => e.id === this.frameSize.id ? acc += i : acc, 0)\n    this.info[i] = JSON.parse(JSON.stringify(this.frameSize));\n\n    console.log(this.info[i], this.frameSize)\n\n\n    localStorage.setItem('info', JSON.stringify(this.info))\n    console.log('Game saved')\n  }\n\n  getFrameSize(fs) {\n    return JSON.parse(JSON.stringify(this.info.filter(e => e.id === fs)[0]))\n  }\n\n  setFrameSize(fs) {\n\n    if (this.frameSize) this.info.filter(e => e.id === this.frameSize.id)[0].last = false\n    this.info.filter(e => e.id === fs)[0].last = true\n    this.frameSize = this.getFrameSize(fs)\n\n  }\n\n  restore(fs) {\n\n    if (localStorage.getItem('info')) this.info = JSON.parse(localStorage.getItem('info'))\n\n    const s = this.info.filter(e => e.id == fs)[0]\n    this.setFrameSize(fs)\n    this.setCurrentBlocksMap(fs)\n\n    this.timerElem.textContent = `${String(this.frameSize.time.minutes).length < 2 ? 0 : ''}${this.frameSize.time.minutes}:${String(this.frameSize.time.seconds).length < 2 ? 0 : ''}${this.frameSize.time.seconds}`;\n    this.moves = this.frameSize.moves\n    this.movesElem.textContent = this.frameSize.moves\n    this.frameSizeInfoElem.textContent = `${this.frameSize.id}x${this.frameSize.id}`;\n\n  }\n\n  isClickOnBlock(x, y) {\n    for (let block of this.blocks) {\n      if (x >= block.x && x <= (block.x + block.width) && y >= block.y && y <= (block.y + block.height)) {\n        this.currentBlock = block\n        return true\n      }\n    }\n    return false\n  }\n\n\n  isSolved() {\n    const w = this.frameSize.winnerBlocksResult.slice()\n    const c = this.frameSize.blocksMap.flat()\n    w.splice(0, 1)\n    c.splice(c.length - 1, 1)\n    return w.every((e, i) => e == c[i])\n  }\n\n  gameOver() {\n    this.save();\n    this.message('winner', 'YOU WON!!!');\n    console.log('Winner!');\n  }\n\n  playAudio() {\n    return new Audio('./assets/adriantnt_u_click.mp3');\n  }\n\n  alert() {\n    alert(`\n    Привет!\n    Не сделано: \n    - анимация движения плиток: -15\n    - плитки можно перетаскивать: -15\n    Итого: 90\n    `)\n  }\n}\n\n\nexport default Game;"],"names":["constructor","this","info","defaultFSid","itemSize","minutes","seconds","moves","isGame","isTimer","canvas","document","createElement","ctx","getContext","blocks","zeroBlock","currentBlock","sound","playAudio","init","Array","keys","map","el","i","id","time","blocksMap","winnerBlocksResult","best","last","createPage","alert","restore","setCanvas","addEventListener","e","target","moveBlock","startBtn","start","stopBtn","stop","saveBtn","save","resultBtn","result","soundBtn","querySelector","muted","src","classList","toggle","contains","clearMoves","clearTimer","dataset","action","frameSizeInfoElem","textContent","frameSize","container","className","body","prepend","h1","buttons","append","button","b","soundImg","setAttribute","currentInfo","insertAdjacentHTML","gameContainer","frameSizeInfo","otherFrameSizes","innerHTML","a","href","movesElem","wrap","timerElem","getRandomBlocks","fs","s","filter","arr","slice","res","length","j","Math","floor","random","push","splice","setCurrentBlocksMap","add","width","height","insertAdjacentElement","tempBlocks","translate","fillStyle","fillRect","name","x","y","row","col","textAlign","textBaseline","font","window","innerWidth","fillText","flat","offsetX","offsetY","drawBlock","play","isSolved","gameOver","isClickOnBlock","remove","timer","console","log","clearInterval","message","setInterval","String","type","str","messages","winner","key","reduce","acc","JSON","parse","stringify","localStorage","setItem","getFrameSize","setFrameSize","getItem","block","w","c","every","Audio"],"sourceRoot":""}