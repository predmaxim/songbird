{"version":3,"file":"assets/js/main.945dc61a.js","mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,KAwD/B,IAlDb,MACEC,YAAYC,GACVC,KAAKD,QAAUA,EACbC,KAAKC,SACT,CAGAC,QAAQC,EAAKC,GACX,MAAO,aAAaA,GAAc,cAAcD,OAClD,CAEAF,UACE,MAEMI,EAAM,CACVC,KAAMV,SAASW,cAAcP,KAAKD,QAAQO,MAC1CE,SAAUR,KAAKD,QAAQS,SACvBC,UAAWT,KAAKD,QAAQU,UACxBC,MAAOV,KAAKD,QAAQU,UAAYT,KAAKD,QAAQS,SAC7CG,OAAQX,KAAKD,QAAQU,UAAYT,KAAKD,QAAQS,UAG1CI,EAAShB,SAASiB,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MAC9BH,EAAOI,UAAUC,IAAI,QACrBL,EAAOF,MAAQL,EAAIM,OACnBC,EAAOD,OAASN,EAAIK,MAEpBL,EAAIC,KAAKY,sBAAsB,aAAcN,GAE7C,IAAK,IAAIO,EAAI,EAAGA,EAAId,EAAII,UAAWU,IAAK,CAClCA,GAAKd,EAAII,YACXU,IACAC,QAAQC,IAAIhB,EAAII,YAElB,IAAK,IAAIa,EAAI,EAAGA,EAAIjB,EAAII,UAAWa,IACjCR,EAAIS,OACJT,EAAIU,UAAUF,EAAIjB,EAAIG,SAAUW,EAAId,EAAIG,UACxCM,EAAIW,WAAW,EAAG,EAAGpB,EAAIG,SAAUH,EAAIG,UACvCM,EAAIY,SAASJ,EAAG,GAAI,IACpBR,EAAIa,SAER,CAEA,OAAO3B,IACT,GAKoB,CACpBM,KAAM,kBACNG,UAAW,EACXD,SAAU,KACX","sources":["webpack://rss-gem-puzzle/./src/main.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n\n\n  // const canvas = document.querySelector('.game');\n  // const game = canvas.getContext('2d');\n\n  class Game {\n    constructor(setting) {\n      this.setting = setting,\n        this.newGame()\n    }\n\n\n    message(str, type) {\n      return `<p class=\"${type ? type : 'message'}\">${str}<p/>`\n    }\n\n    newGame() {\n      const frameSizesData = { 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven', 8: 'eight' }\n\n      const opt = {\n        wrap: document.querySelector(this.setting.wrap),\n        itemSize: this.setting.itemSize,\n        frameSize: this.setting.frameSize,\n        width: this.setting.frameSize * this.setting.itemSize,\n        height: this.setting.frameSize * this.setting.itemSize,\n      }\n\n      const canvas = document.createElement('canvas')\n      const ctx = canvas.getContext('2d')\n      canvas.classList.add('game')\n      canvas.width = opt.height\n      canvas.height = opt.width\n\n      opt.wrap.insertAdjacentElement('afterbegin', canvas);\n\n      for (let i = 0; i < opt.frameSize; i++) {\n        if (i == opt.frameSize) {\n          i++\n          console.log(opt.frameSize)\n        }\n        for (let j = 0; j < opt.frameSize; j++) {\n          ctx.save();\n          ctx.translate(j * opt.itemSize, i * opt.itemSize);\n          ctx.strokeRect(0, 0, opt.itemSize, opt.itemSize);\n          ctx.fillText(j, 50, 50);\n          ctx.restore();\n        }\n      }\n\n      return this\n    }\n\n  }\n\n\n  const game = new Game({\n    wrap: '.game-container',\n    frameSize: 4,\n    itemSize: 100,\n  })\n\n})\n\n\n\n\n// draw(num, pos, elem) {\n//   if (!frameSizesData[num]) return gameContainerElem.insertAdjacentHTML(pos, this.message('Wrong frame size!'))\n\n//   gameElem.setAttribute('class', `game ${frameSizesData[num]}`)\n\n//   let random = [];\n//   const n = num * num - 1;\n//   while (random.length < n) {\n//     let r = Math.floor(Math.random() * n) + 1;\n//     if (!random.includes(r)) random.push(r);\n//   }\n\n\n//   const items = [...Array(num).keys()].map(i => `<div class=\"game__item\"><span>${random[i]}</span></div>`)\n//   return items.map((el) => elem.insertAdjacentHTML(pos, el))\n// }"],"names":["document","addEventListener","constructor","setting","this","newGame","message","str","type","opt","wrap","querySelector","itemSize","frameSize","width","height","canvas","createElement","ctx","getContext","classList","add","insertAdjacentElement","i","console","log","j","save","translate","strokeRect","fillText","restore"],"sourceRoot":""}